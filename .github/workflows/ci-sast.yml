name: CI - SAST (Semgrep)

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  sast:
    runs-on: ubuntu-latest

    steps:
      # --------------------------
      # 1. Checkout do código
      # --------------------------
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # necessário para baseline/diff-aware

      # --------------------------
      # 2. Setup Python
      # --------------------------
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # --------------------------
      # 3. Instalar Semgrep
      # --------------------------
      - name: Install Semgrep
        run: python -m pip install --upgrade pip && pip install semgrep

      # --------------------------
      # 4. Rodar Semgrep no modo CI e gerar SARIF
      # --------------------------
      - name: Run Semgrep (CI mode) and produce SARIF
        run: |
          semgrep ci --config .semgrep.yml --sarif --sarif-output=semgrep.sarif || true
        env:
          SEMGREP_TIMEOUT: 600

      # --------------------------
      # 5. Upload SARIF para GitHub Security
      # --------------------------
      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
        if: always()

      # --------------------------
      # 6. Bloquear workflow se encontrar HIGH/ERROR findings
      # --------------------------
      - name: Fail workflow on HIGH/ERROR findings
        if: always()
        run: |
          if [ ! -f semgrep.sarif ]; then
            echo "semgrep.sarif not found, skipping fail gate"
            exit 0
          fi
          ERRORS=$(jq '[.runs[].results[] | select(.level=="error" or .level=="critical" or .ruleSeverity=="ERROR" )] | length' semgrep.sarif)
          echo "Semgrep errors found: $ERRORS"
          if [ "$ERRORS" -gt 0 ]; then
            echo "Blocking: found $ERRORS semgrep ERROR/CRITICAL findings"
            exit 1
          fi
